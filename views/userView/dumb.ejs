<%- include("../partials/userHeader") %>
<main>
  <!-- checkout-breadcrumb -->
  <section
    style="
      background-image: url('/user-assets/img/bg/page-title.png');
      height: 150px;
      padding: 20px 0;
    "
  >
    <!-- Your existing breadcrumb code -->
  </section>
  <!-- end-checkout-breadcrumb -->

  <!-- checkout-area start -->
  <section class="checkout-area pb-70" style="padding-top: 10px">
    <div class="container">
      <form action="/place-order" method="post">
        <div class="row">
          <div class="col-lg-6">
            <!-- Address Details Section -->
            <div class="checkbox-form">
              <!-- Existing address accordion -->
              <h3>Address Details</h3>
              <div class="accordion" id="addressAccordion">
                <!-- Your existing address accordion content -->
              </div>
              <!-- New accordion for adding a new address -->
              <div class="card">
                <div class="card-header" id="newAddressHeading">
                  <h5 class="mb-0">
                    <button
                      class="btn btn-link"
                      type="button"
                      data-toggle="collapse"
                      data-target="#collapseNewAddress"
                      aria-expanded="true"
                      aria-controls="collapseNewAddress"
                    >
                      Add New Address
                    </button>
                  </h5>
                </div>
                <div
                  id="collapseNewAddress"
                  class="collapse"
                  aria-labelledby="newAddressHeading"
                  data-parent="#addressAccordion"
                >
                  <div class="card-body">
                    <!-- New address form -->
                    <form id="addAddressForm">
                      <div class="form-group">
                        <label for="firstName">First Name<span class="required">*</span></label>
                        <input type="text" class="form-control" id="firstName" name="firstName" required>
                      </div>
                      <div class="form-group">
                        <label for="lastName">Last Name<span class="required">*</span></label>
                        <input type="text" class="form-control" id="lastName" name="lastName" required>
                      </div>
                      <div class="form-group">
                        <label for="house">House / Flat<span class="required">*</span></label>
                        <input type="text" class="form-control" id="house" name="house" required>
                      </div>
                      <div class="form-group">
                        <label for="locality">Locality<span class="required">*</span></label>
                        <input type="text" class="form-control" id="locality" name="locality" required>
                      </div>
                      <div class="form-group">
                        <label for="city">City<span class="required">*</span></label>
                        <input type="text" class="form-control" id="city" name="city" required>
                      </div>
                      <div class="form-group">
                        <label for="state">State<span class="required">*</span></label>
                        <input type="text" class="form-control" id="state" name="state" required>
                      </div>
                      <div class="form-group">
                        <label for="pincode">Pincode<span class="required">*</span></label>
                        <input type="text" class="form-control" id="pincode" name="pincode" required>
                      </div>
                      <div class="form-group">
                        <label for="country">Country<span class="required">*</span></label>
                        <input type="text" class="form-control" id="country" name="country" required>
                      </div>
                      <div class="form-group">
                        <label for="email">Email Address<span class="required">*</span></label>
                        <input type="email" class="form-control" id="email" name="email" required>
                      </div>
                      <div class="form-group">
                        <label for="phone">Phone<span class="required">*</span></label>
                        <input type="text" class="form-control" id="phone" name="phone" required>
                      </div>
                      <button type="submit" class="btn btn-primary">Add Address</button>
                    </form>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <!-- Your existing checkout form content -->
        </div>
      </form>
    </div>
  </section>
  <!-- checkout-area end -->
</main>

<%- include("../partials/userFooter") %>

<script>
  document.getElementById("addAddressForm").addEventListener("submit", function (event) {
    event.preventDefault();

    // Collect form data and convert to JSON
    const formData = new FormData(this);
    const addressData = {};
    formData.forEach((value, key) => {
      addressData[key] = value;
    });

    // Send POST request to add new address
    fetch("/add-address", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(addressData),
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.success) {
          // Display success message and reload the page
          swal
            .fire({
              title: "Success",
              text: data.message,
              icon: "success",
              confirmButtonColor: "#3085d6",
              confirmButtonText: "Okay",
            })
            .then(() => {
              window.location.href = "/address"; // Redirect to the address page
            });
        } else {
          // Handle error response
          swal.fire({
            title: "Error",
            text: data.message,
            icon: "error",
            confirmButtonColor: "#d33",
            confirmButtonText: "Okay",
          });
        }
      })
      .catch((error) => {
        console.error("Error:", error);

        // Handle unexpected errors
        swal.fire({
          title: "Error",
          text: "Failed to communicate with the server",
          icon: "error",
          confirmButtonColor: "#d33",
          confirmButtonText: "Okay",
        });
      });
  });
</script>
