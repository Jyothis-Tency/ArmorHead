<%- include("../partials/userHeader") %>

<main style="display: flex; margin-bottom: 500px;">
  <!-- Sidebar positioned at the left -->
  <div class="user-sidebar" style="
        background-color: #2c3e50; 
        color: white; 
        padding: 20px; 
        width: 300px; 
        height: 200px; 
        margin-top: 250px;
        position: fixed; 
        top: 0; 
        left: 0; 
        border-radius: 0 10px 10px 0; 
        box-shadow: 2px 0 15px rgba(0, 0, 0, 0.2);
        ">
    <!-- User Profile Sidebar -->
    <div class="user-profile-sidebar">
      <ul class="user-profile-menu" style="list-style-type: none; padding: 0; margin: 0;">
        <li style="margin-bottom: 15px;">
          <a href="/user-profile" style="color: white; text-decoration: none; font-weight: bold;">
            Profile Details
          </a>
        </li>
        <li style="margin-bottom: 15px;">
          <a href="/changePassword" style="color: white; text-decoration: none; font-weight: bold;">
            Change Password
          </a>
        </li>
        <li style="margin-bottom: 15px;">
          <a href="/order-details" style="color: white; text-decoration: none; font-weight: bold;">
            Order Details
          </a>
        </li>
        <li style="margin-bottom: 15px;">
          <a href="/address-management" style="color: white; text-decoration: none; font-weight: bold;">
            Address Management
          </a>
        </li>
        <li style="margin-bottom: 15px;">
          <a href="/wallet" style="color: white; text-decoration: none; font-weight: bold;">
            Wallet
          </a>
        </li>
      </ul>
    </div>
  </div>

  <!-- Change Password Content -->
  <div style="margin-left: 320px; padding: 20px; flex-grow: 1; margin-top: 100px;">
    <div style="max-width: 600px; margin: auto; background-color: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);">
      <h2 style="color: #2c3e50; margin-bottom: 20px;">Change Password</h2>
      <form id="changePasswordForm" action="/change-password" method="POST">
        <div class="form-group" style="margin-bottom: 15px;">
          <label for="currentPassword">Current Password:</label>
          <input type="password" id="currentPassword" name="currentPassword" required style="width: 100%; padding: 10px;">
        </div>
        <div class="form-group" style="margin-bottom: 15px;">
          <label for="newPassword">New Password:</label>
          <input type="password" id="newPassword" name="newPassword" required style="width: 100%; padding: 10px;">
        </div>
        <div style="display: flex; justify-content: space-between; margin-top: 20px;">
          <button type="submit" style="padding: 10px 20px; background-color: red; color: white; border-radius: 4px;">Submit</button>
          <button type="button" onclick="window.location.href='/user-profile'" style="padding: 10px 20px; background-color: #3085d6; color: white; border-radius: 4px;">Cancel</button>
        </div>
      </form>
    </div>
  </div>
</main>

<%- include("../partials/userFooter") %>

<script>
    document.addEventListener("DOMContentLoaded", function () {
  const changePasswordForm = document.getElementById("changePasswordForm");

  changePasswordForm.addEventListener("submit", async function (event) {
    event.preventDefault(); // Prevent the default form submission

    // Get current and new password values from the form
    const currentPassword = document.getElementById("currentPassword").value;
    const newPassword = document.getElementById("newPassword").value;

    // Create a data object with current and new passwords
    const data = {
      currentPassword: currentPassword,
      newPassword: newPassword,
    };

    // Send the password change request to the server
    try {
      const response = await fetch("/change-password", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      });

      const responseData = await response.json();

      if (response.ok && responseData.success) {
        // Show a success message using SweetAlert
        Swal.fire({
          title: "Password Changed",
          text: responseData.message,
          icon: "success",
          confirmButtonColor: "#3085d6",
          confirmButtonText: "Okay",
        }).then(() => {
          // Redirect to the user profile page after success
          window.location.href = "/user-profile";
        });
      } else {
        // Show an error message if the server response indicates failure
        Swal.fire({
          title: "Error",
          text: responseData.message,
          icon: "error",
          confirmButtonColor: "#d33",
          confirmButtonText: "Okay",
        });
      }
    } catch (error) {
      console.error("Error occurred:", error);

      Swal.fire({
        title: "Error",
        text: "Failed to communicate with the server. Please try again later.",
        icon: "error",
        confirmButtonColor: "#d33",
        confirmButtonText: "Okay",
      });
    }
  });
});

</script>