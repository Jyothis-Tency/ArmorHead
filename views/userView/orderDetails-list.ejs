<%- include("../partials/userHeader") %>

<main>
  <div class="table-responsive" style="min-height: 500px; overflow: auto">
    <table
      class="order-table"
      style="
        max-width: 800px;
        width: 100%;
        margin: 20px auto 0;
        border-collapse: collapse;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
      "
    >
      <thead>
        <tr>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            SL.No
          </th>
          <!-- <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Product
          </th>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Quantity
          </th>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Size
          </th> -->
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Order Date
          </th>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Payment Method and Status
          </th>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Amount
          </th>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Order Track
          </th>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            View Orders
          </th>
          
        </tr>
      </thead>
      <tbody>
        <% for (let i = 0; i < orderDetails.length; i++) { const order =
        orderDetails[i]; %>
        <tr>
          <td>
            <span> <%= i+1 %></span>
          </td>
          <!-- <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <%= order.productName %>
          </td>
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <%= order.quantity %>
          </td>
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <%= order.size %>
          </td> -->
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <%= order.orderDate ? new
            Date(order.orderDate).toLocaleString('en-US', { dateStyle: 'medium',
            timeStyle: 'short' }) : '' %>
          </td>
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <%= order.paymentMethod %> : <%= order.paymentStatus %>
          </td>
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <%= order.totalAmount %>
          </td>
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <%= order.orderStatus %>
          </td>
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <a style="color: blue;" href="/orderDetails-page/<%= order.orderId %>">view</a>
          </td>
        </tr>
        <% } %>
      </tbody>
    </table>
  </div>

  <div
    class="pagination"
    style="
      text-align: center;
      padding: 20px 0;
      display: flex;
      justify-content: center;
    "
  >
    <% const totalPages = Math.ceil(totalOrders / limit); %> <% for (let i = 1;
    i <= totalPages; i++) { %>
    <a
      href="/order-details?page=<%= i %>"
      class="<%= i === page ? 'active' : '' %>"
      style="
        display: inline-block;
        padding: 10px;
        margin: 0 5px;
        background-color: #e50404;
        color: #ffffff;
        text-decoration: none;
        border-radius: 5px;
        transition: background-color 0.3s;
      "
    >
      <%= i %>
    </a>
    <% } %>
  </div>

  <div
    class="user-sidebar"
    style="
      background-color: #2c3e50;
      color: white;
      padding: 20px;
      width: 300px;
      height: auto; /* Adjust to fit content */
      position: fixed;
      top: 50%; /* Align in the middle vertically */
      transform: translateY(-50%); /* Centering effect */
      left: 0;
      border-radius: 0 10px 10px 0;
      box-shadow: 2px 0 15px rgba(0, 0, 0, 0.2);
    "
  >
    <!-- User Profile Sidebar -->
    <div class="user-profile-sidebar">
      <ul style="list-style-type: none; padding: 0; margin: 0">
        <li style="margin-bottom: 15px">
          <a
            href="/user-profile"
            style="color: white; text-decoration: none; font-weight: bold"
            >Profile Details</a
          >
        </li>
        <li style="margin-bottom: 15px">
          <a
            href="/changePassword"
            style="color: white; text-decoration: none; font-weight: bold"
            >Change Password</a
          >
        </li>
        <li style="margin-bottom: 15px">
          <a
            href="/order-details"
            style="color: white; text-decoration: none; font-weight: bold"
            >Order Details</a
          >
        </li>
        <li style="margin-bottom: 15px">
          <a
            href="/address"
            style="color: white; text-decoration: none; font-weight: bold"
            >Address Management</a
          >
        </li>
        <li style="margin-bottom: 15px">
          <a
            href="/get-wallet"
            style="color: white; text-decoration: none; font-weight: bold"
            >Wallet</a
          >
        </li>
      </ul>
    </div>
  </div>
</main>
<%- include("../partials/userFooter") %>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  // Get all pagination links
  const paginationLinks = document.querySelectorAll(".pagination a");

  // Add hover effect with inline CSS changes
  paginationLinks.forEach((link) => {
    link.addEventListener("mouseover", () => {
      // Change background color and text color on hover
      link.style.backgroundColor = "#dcdcdc"; // New hover color
      link.style.color = "#ffffff"; // Change text color for contrast
    });

    link.addEventListener("mouseout", () => {
      // Revert back to original color when hover is removed
      link.style.backgroundColor = "#e50404"; // Original color
      link.style.color = "#ffffff"; // Original text color
    });
  });
</script>
<script>
  // Retry button click handling for Razorpay payments
  $(document).on("click", ".retry-btn", function (event) {
    event.preventDefault(); // Prevent default link behavior
    const orderId = $(this).data("order-id");
    console.log("Retrying Razorpay payment for Order ID:", orderId);

    $.ajax({
      type: "POST",
      url: "/second-try",
      data: { payment_method: "razorpay", order_id: orderId },
      success: function (response) {
        paymentMethodRazorpayPayment(response);
      },
      error: function (xhr, status, error) {
        console.error("Error retrying payment:", error);
        const errorMessage = xhr.responseJSON
          ? xhr.responseJSON.message
          : "An error occurred while retrying the payment. Please try again later.";
        Swal.fire({
          title: "Error",
          text: errorMessage,
          icon: "error",
          confirmButtonText: "Okay",
        });
      },
    });
  });

  function paymentMethodRazorpayPayment(orderinfo) {
    console.log("Processing Razorpay Payment");
    const options = {
      key: "rzp_test_ywCWUQCjUZBwUk", // Your Razorpay Key ID
      amount: orderinfo.razorpayOrderDetails.amount, // in subunits
      currency: "INR",
      name: "ArmorHead", // Business name
      description: "Test Transaction",
      order_id: orderinfo.razorpayOrderDetails.id,
      handler: function (response) {
        verifyPaymentSignature(response, orderinfo);
      },
      prefill: {
        name: "Ranga Annan",
        email: "rangaannan@gmail.com",
        contact: "1234567890",
      },
      theme: {
        color: "#3399cc",
      },
    };

    const rzp1 = new Razorpay(options);
    rzp1.open();
  }

  function verifyPaymentSignature(payment, orderinfo) {
    console.log("Verifying Razorpay Payment Signature");
    $.ajax({
      url: "/verify-payment",
      method: "POST",
      data: { payment, orderinfo },
      success: function (response) {
        if (response.status) {
          Swal.fire({
            title: "Success",
            text: "Payment successful!",
            icon: "success",
            confirmButtonText: "Okay",
            timer: 3000, // Auto-dismiss after 3 seconds
          }).then(() => {
            window.location.reload();
          });
        } else {
          Swal.fire({
            title: "Failed",
            text: "Payment verification failed.",
            icon: "error",
            confirmButtonText: "Okay",
          }).then(() => {
            window.location.reload();
          });
        }
      },
      error: function (err) {
        Swal.fire({
          title: "Error",
          text: "Payment verification error.",
          icon: "error",
          confirmButtonText: "Okay",
        });
      },
    });
  }

  function cancelOrder(orderId) {
    Swal.fire({
      title: "Are you sure?",
      text: "This will cancel the order and it cannot be undone.",
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "Yes, cancel it!",
      cancelButtonText: "No, keep it",
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: "/cancel-order",
          method: "POST",
          data: { orderId },
          success: function (response) {
            Swal.fire({
              title: "Cancelled",
              text: "Your order has been cancelled.",
              icon: "success",
              confirmButtonText: "Okay",
            });
            window.location.reload();
          },
          error: function (err) {
            Swal.fire({
              title: "Error",
              text: "Failed to cancel the order. Please try again later.",
              icon: "error",
              confirmButtonText: "Okay",
            });
          },
        });
      }
    });
  }

  function openReturnModal(orderId) {
    const modal = document.getElementById("returnModal");
    modal.style.display = "block";
    modal.dataset.orderId = orderId;
  }

  function closeReturnModal() {
    const modal = document.getElementById("returnModal");
    modal.style.display = "none";
  }

  document.getElementById("cancelButton").onclick = closeReturnModal;

  document.getElementById("okayButton").onclick = function () {
    const modal = document.getElementById("returnModal");
    const orderId = modal.dataset.orderId;
    const selectedReason = document.querySelector(
      "input[name='returnReason']:checked"
    ).value;
    const additionalReason = document.getElementById("additionalReason").value;

    $.ajax({
      type: "POST",
      url: "/conformReturn", // Adjust endpoint as needed
      data: {
        orderId: orderId,
        returnReason: selectedReason,
        additionalReason: additionalReason,
      },
      success: function (response) {
        console.log("Return submitted:", response);
        Toastify({
          text: response.message,
          duration: 3000, // Duration in milliseconds
          close: true, // Show close button
          gravity: "top", // Display position: 'top', 'bottom', 'left', 'right'
          position: "center", // Alignment of position: 'left', 'right', 'center'
          backgroundColor: "green", // Background color
        }).showToast();
        setTimeout(() => {
          closeReturnModal();
          window.location.reload();
        }, 3000);
      },
      error: function (error) {
        console.error("Error submitting return:", error);
        Toastify({
          text: error.message,
          duration: 3000, // Duration in milliseconds
          close: true, // Show close button
          gravity: "top", // Display position: 'top', 'bottom', 'left', 'right'
          position: "center", // Alignment of position: 'left', 'right', 'center'
          backgroundColor: "green", // Background color
        }).showToast();
      },
    });
  };
</script>


