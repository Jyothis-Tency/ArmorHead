<%- include("../partials/userHeader") %>

<main>
  <div class="table-responsive" style="min-height: 500px; overflow: auto">
    <table
      class="order-table"
      style="
        max-width: 800px;
        width: 100%;
        margin: 20px auto 0;
        border-collapse: collapse;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
      "
    >
      <thead>
        <tr>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Product Image
          </th>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Product
          </th>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Quantity
          </th>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Size
          </th>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Order Date
          </th>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Payment Method and Status
          </th>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Order Track
          </th>
          <th
            style="
              padding: 15px;
              background-color: #f2f2f2;
              font-weight: bold;
              color: #333;
              border-bottom: 1px solid #ddd;
            "
          >
            Action
          </th>
        </tr>
      </thead>
      <tbody>
        <% for (let i = 0; i < orderDetails.length; i++) { const order =
        orderDetails[i]; %>
        <tr>
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
            class="product-image"
          >
            <img
              src="/uploads/product-images/<%= order.productImage[1] %>"
              alt="Product Image"
              style="max-width: 100px; height: auto; border-radius: 5px"
            />
          </td>
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <%= order.productName %>
          </td>
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <%= order.quantity %>
          </td>
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <%= order.size %>
          </td>
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <%= order.orderDate ? new
            Date(order.orderDate).toLocaleString('en-US', { dateStyle: 'medium',
            timeStyle: 'short' }) : '' %>
          </td>
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <%= order.paymentMethod %> : <%= order.paymentStatus %>
          </td>
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <%= order.orderStat %>
          </td>
          <td
            style="
              padding: 15px;
              text-align: left;
              border-bottom: 1px solid #ddd;
            "
          >
            <% if (order.paymentStatus === 'success') { if (order.orderStat ===
            'cancelled') { %>
            <span>Cancelled</span>
            <% } else if (order.orderStat === 'returned') { %>
            <span>Returned</span>
            <% } else if (order.orderStat === 'confirmed' || order.orderStat ===
            'pending' || order.orderStat === 'shipped' || order.orderStat ===
            'outForDelivery') { %>
            <button
              class="cancel-btn"
              data-order-id="<%= order.orderedItemId %>"
              onclick="cancelOrder('<%= order.orderedItemId %>')"
              style="
                background-color: red;
                color: white;
                padding: 5px 10px;
                border: none;
                cursor: pointer;
                transition: background-color 0.3s;
              "
            >
              Cancel
            </button>
            <% } else if (order.orderStat === 'delivered') { %>
            <button
              class="return-btn"
              data-order-id="<%= order.orderedItemId %>"
              onclick="returnOrder('<%= order.orderedItemId %>')"
              style="
                background-color: yellow;
                color: black;
                padding: 5px 10px;
                border: none;
                cursor: pointer;
                transition: background-color 0.3s;
              "
            >
              Return
            </button>
            <% } %> <% } else if (order.paymentStatus === 'pending') { %>
            <button
              class="retry-btn"
              data-order-id="<%= order.orderedItemId %>"
              style="
                background-color: #426aed;
                color: #333;
                padding: 5px 10px;
                border: none;
                cursor: pointer;
              "
            >
              Retry
            </button>
            <% } %>
          </td>
        </tr>
        <% } %>
      </tbody>
    </table>
  </div>

<div class="pagination" style="text-align: center; padding: 20px 0; display: flex; justify-content: center;">
  <% const totalPages = Math.ceil(totalOrders / limit); %>
  <% for (let i = 1; i <= totalPages; i++) { %>
    <a 
      href="/order-details?page=<%= i %>" 
      class="<%= i === page ? 'active' : '' %>" 
      style="
        display: inline-block;
        padding: 10px;
        margin: 0 5px;
        background-color: #e50404;
        color: #ffffff;
        text-decoration: none;
        border-radius: 5px;
        transition: background-color 0.3s;
      "
    >
      <%= i %>
    </a>
  <% } %>
</div>

</main>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  // Get all pagination links
  const paginationLinks = document.querySelectorAll('.pagination a');

  // Add hover effect with inline CSS changes
  paginationLinks.forEach(link => {
    link.addEventListener('mouseover', () => {
      // Change background color and text color on hover
      link.style.backgroundColor = '#dcdcdc'; // New hover color
      link.style.color = '#ffffff'; // Change text color for contrast
    });

    link.addEventListener('mouseout', () => {
      // Revert back to original color when hover is removed
      link.style.backgroundColor = '#e50404'; // Original color
      link.style.color = '#ffffff'; // Original text color
    });
  });
</script>
<script>
  // Retry button click handling for Razorpay payments
  $(document).on("click", ".retry-btn", function (event) {
    event.preventDefault(); // Prevent default link behavior
    const orderId = $(this).data("order-id");
    console.log("Retrying Razorpay payment for Order ID:", orderId);

    $.ajax({
      type: "POST",
      url: "/second-try",
      data: { payment_method: "razorpay", order_id: orderId },
      success: function (response) {
        paymentMethodRazorpayPayment(response);
      },
      error: function (xhr, status, error) {
        console.error("Error retrying payment:", error);
        const errorMessage = xhr.responseJSON
          ? xhr.responseJSON.message
          : "An error occurred while retrying the payment. Please try again later.";
        Swal.fire({
          title: "Error",
          text: errorMessage,
          icon: "error",
          confirmButtonText: "Okay",
        });
      },
    });
  });

  function paymentMethodRazorpayPayment(orderinfo) {
    console.log("Processing Razorpay Payment");
    const options = {
      key: "rzp_test_ywCWUQCjUZBwUk", // Your Razorpay Key ID
      amount: orderinfo.razorpayOrderDetails.amount, // in subunits
      currency: "INR",
      name: "ArmorHead", // Business name
      description: "Test Transaction",
      order_id: orderinfo.razorpayOrderDetails.id,
      handler: function (response) {
        verifyPaymentSignature(response, orderinfo);
      },
      prefill: {
        name: "Ranga Annan",
        email: "rangaannan@gmail.com",
        contact: "1234567890",
      },
      theme: {
        color: "#3399cc",
      },
    };

    const rzp1 = new Razorpay(options);
    rzp1.open();
  }

  function verifyPaymentSignature(payment, orderinfo) {
    console.log("Verifying Razorpay Payment Signature");
    $.ajax({
      url: "/verify-payment",
      method: "POST",
      data: { payment, orderinfo },
      success: function (response) {
        if (response.status) {
          Swal.fire({
            title: "Success",
            text: "Payment successful!",
            icon: "success",
            confirmButtonText: "Okay",
            timer: 3000, // Auto-dismiss after 3 seconds
          }).then(() => {
            window.location.reload();
          });
        } else {
          Swal.fire({
            title: "Failed",
            text: "Payment verification failed.",
            icon: "error",
            confirmButtonText: "Okay",
          }).then(() => {
            window.location.reload();
          });
        }
      },
      error: function (err) {
        Swal.fire({
          title: "Error",
          text: "Payment verification error.",
          icon: "error",
          confirmButtonText: "Okay",
        });
      },
    });
  }

  function cancelOrder(orderId) {
    Swal.fire({
      title: "Are you sure?",
      text: "This will cancel the order and it cannot be undone.",
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "Yes, cancel it!",
      cancelButtonText: "No, keep it",
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: "/cancel-order",
          method: "POST",
          data: { orderId },
          success: function (response) {
            Swal.fire({
              title: "Cancelled",
              text: "Your order has been cancelled.",
              icon: "success",
              confirmButtonText: "Okay",
            });
            window.location.reload();
          },
          error: function (err) {
            Swal.fire({
              title: "Error",
              text: "Failed to cancel the order. Please try again later.",
              icon: "error",
              confirmButtonText: "Okay",
            });
          },
        });
      }
    });
  }

  function returnOrder(orderId) {
    Swal.fire({
      title: "Are you sure?",
      text: "This will return the order and it cannot be undone.",
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "Yes, return it!",
      cancelButtonText: "No, keep it",
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: "/return-order",
          method: "POST",
          data: { orderId },
          success: function (response) {
            Swal.fire({
              title: "Returned",
              text: "Your order has been returned.",
              icon: "success",
              confirmButtonText: "Okay",
            });
            window.location.reload();
          },
          error: function (err) {
            Swal.fire({
              title: "Error",
              text: "Failed to return the order. Please try again later.",
              icon: "error",
              confirmButtonText: "Okay",
            });
          },
        });
      }
    });
  }
</script>

<%- include("../partials/userFooter") %>
