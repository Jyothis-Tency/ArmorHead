<%- include("../partials/adminHeader") %>

<style>
  .col-md-3 {
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 10px;
    margin: 10px;
  }

  .error-message {
    color: red;
    margin-top: 5px;
  }

  .form-label {
    margin-bottom: 8px;
  }

  .form-control {
    width: 100%;
    padding: 8px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    box-sizing: border-box;
  }

  .d-grid {
    margin-top: 20px;
  }

  .btn-primary {
    background-color: #007bff;
    color: #fff;
    border: 1px solid #007bff;
    border-radius: 5px;
    padding: 10px 20px;
    cursor: pointer;
  }

  .btn-primary:hover {
    background-color: #0056b3;
    border-color: #0056b3;
  }
</style>

<section class="content-main">
  <div class="content-header">
    <div>
      <h2 class="content-title card-title">Coupons</h2>
    </div>
  </div>
  <div class="card">
    <div class="card-body">
      <div class="row">
        <div class="col-md-3">
          <form
            method="post"
            action="/admin/add-coupon"
            onsubmit="return validateAddCouponForm()"
          >
            <div class="mb-4">
              <label for="coupon-name" class="form-label">Coupon Name</label>
              <input
                type="text"
                id="coupon-name"
                name="couponName"
                placeholder="Type here"
                class="form-control"
              />
              <div id="coupon-name-error" class="error-message"></div>
            </div>
            <div>
              <label for="startingDate" class="form-label">Start Date</label>
              <input
                type="date"
                name="startDate"
                class="form-control"
                required
                id="startingDate"
              />
              <div id="start-date-error" class="error-message"></div>
            </div>
            <div>
              <label for="expiringDate" class="form-label">End Date</label>
              <input
                type="date"
                name="endDate"
                class="form-control"
                required
                id="expiringDate"
              />
              <div id="end-date-error" class="error-message"></div>
            </div>
            <div>
              <label for="minimum-price" class="form-label"
                >Discount Amount</label
              >
              <input
                type="number"
                name="discountAmount"
                placeholder="Type here"
                class="form-control"
              />
              <div id="discount-amount-error" class="error-message"></div>
            </div>
            <div class="d-grid">
              <button class="btn btn-primary mt-20" type="submit">
                Add Coupon
              </button>
            </div>
          </form>
        </div>
        <div class="col-md-7 ml-105">
          <div class="table-responsive">
            <table class="table table-hover">
              <thead>
                <tr>
                  <th>Name</th>
                  <th>Coupon Code</th>
                  <th>Created On</th>
                  <th>Expire On</th>
                  <th>Discount Amount</th>
                  <th>Edit</th>
                  <th>Delete</th>
                </tr>
              </thead>
              <tbody>
                <% for (let i=0; i < coupons.length; i++) { %>
                <tr>
                  <td class="text-start"><%= coupons[i].couponName %></td>
                  <td class="text-start"><%= coupons[i].couponCode %></td>
                  <td class="text-start">
                    <%= new Date(coupons[i].createdOn).toLocaleDateString() %>
                  </td>
                  <td class="text-start">
                    <%= new Date(coupons[i].expiryDate).toLocaleDateString() %>
                  </td>
                  <td class="text-start"><%= coupons[i].discount %></td>
                  <td width="10%">
                    <a
                      class="btn btn-sm rounded font-sm mt-15 edit-btn"
                      style="
                        background-color: blue;
                        color: white;
                        padding: 5px 10px;
                      "
                      onclick="openEditModal('<%= coupons[i]._id %>','<%= coupons[i].couponName %>','<%= coupons[i].createdOn %>','<%= coupons[i].expiryDate %>','<%= coupons[i].discount %>')"
                    >
                      Edit
                    </a>
                  </td>
                  <td width="10%">
                    <a
                      onclick="deleteCoupon('<%= coupons[i]._id %>')"
                      class="btn btn-sm rounded font-sm mt-15"
                      style="
                        background-color: red;
                        color: white;
                        padding: 5px 10px;
                      "
                      >Delete</a
                    >
                  </td>
                </tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<div
  id="editCouponModal"
  class="modal"
  style="
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 400px;
    height: auto;
    background-color: white;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    z-index: 1000;
    padding: 20px;
  "
>
  <div class="modal-content" style="position: relative">
    <span
      class="close"
      onclick="closeEditModal()"
      style="
        position: absolute;
        top: 10px;
        right: 10px;
        cursor: pointer;
        font-size: 20px;
      "
      >&times;</span
    >
    <form
      method="post"
      action="/admin/edit-coupon"
      onsubmit="return validateEditCouponForm()"
    >
      <input
        type="text"
        hidden
        id="edit-coupon-id"
        name="couponId"
        value=""
        placeholder="Type here"
        class="form-control"
      />
      <div class="mb-4">
        <label for="edit-coupon-name" class="form-label">Coupon Name</label>
        <input
          type="text"
          id="edit-coupon-name"
          name="couponName"
          value=""
          placeholder="Type here"
          class="form-control"
        />
        <div id="edit-coupon-name-error" class="error-message"></div>
      </div>
      <div>
        <label for="edit-startingDate" class="form-label">Start Date</label>
        <input
          type="date"
          name="startDate"
          value=""
          class="form-control"
          required
          id="edit-startingDate"
        />
        <div id="edit-start-date-error" class="error-message"></div>
      </div>
      <div>
        <label for="edit-expiringDate" class="form-label">End Date</label>
        <input
          type="date"
          name="endDate"
          value=""
          class="form-control"
          required
          id="edit-expiringDate"
        />
        <div id="edit-end-date-error" class="error-message"></div>
      </div>
      <div>
        <label for="edit-discountAmount" class="form-label"
          >Discount Amount</label
        >
        <input
          type="number"
          name="discountAmount"
          value=""
          placeholder="Type here"
          class="form-control"
          id="edit-discountAmount"
        />
        <div id="edit-discount-amount-error" class="error-message"></div>
      </div>
      <div class="d-grid">
        <button
          class="btn btn-primary mt-20"
          type="submit"
          onclick="editCoupon()"
        >
          Edit Coupon
        </button>
      </div>
    </form>
  </div>
</div>

<%- include("../partials/adminFooter") %>

<script>
  function deleteCoupon(couponId) {
    console.log("clicked", couponId);
    Swal.fire({
      title: "Are you sure you want to delete this coupon?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, delete it!",
      cancelButtonText: "No, cancel",
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: "/admin/deleteCoupon/" + couponId,
          type: "post",
        })
          .done((res) => {
            if (res) {
              Swal.fire("Successful", `${res.message}`, "success").then(() => {
                location.reload();
              });
            }
          })
          .fail((error) => {
            console.log(error);
            Swal.fire("Failed to delete coupon");
          });
      }
    });
  }

  let eCouponId;
  function openEditModal(couponId, couponName, startDate, endDate, discount) {
    console.log(couponId, couponName, startDate, endDate, discount);
    eCouponId = couponId;
    document.getElementById("edit-coupon-name").value = couponName;
    document.getElementById("edit-startingDate").value = startDate;
    document.getElementById("edit-expiringDate").value = endDate;
    document.getElementById("edit-discountAmount").value = discount;
    document.getElementById("editCouponModal").style.display = "block";
  }

  function closeEditModal() {
    document.getElementById("editCouponModal").style.display = "none";
  }

  function editCoupon() {
    console.log("editCoupon triggered");
    console.log(eCouponId);

    let eCouponName = document.getElementById("edit-coupon-name").value;
    let eStartDate = document.getElementById("edit-startingDate").value;
    let eEndDate = document.getElementById("edit-expiringDate").value;
    let eDiscount = document.getElementById("edit-discountAmount").value;
    console.log(eCouponName);
    console.log(eStartDate);
    console.log(eEndDate);
    console.log(eDiscount);

    let isValid = true;
    if (!eCouponName) {
      document.getElementById("edit-coupon-name-error").innerText =
        "Coupon name is required.";
      isValid = false;
    } else if (eCouponName !== eCouponName.toUpperCase()) {
      document.getElementById("edit-coupon-name-error").innerText =
        "Coupon name must be in capital letters.";
      isValid = false;
    } else {
      document.getElementById("edit-coupon-name-error").innerText = "";
    }

    if (!eStartDate) {
      document.getElementById("edit-start-date-error").innerText =
        "Start date is required.";
      isValid = false;
    } else {
      document.getElementById("edit-start-date-error").innerText = "";
    }

    if (!eEndDate) {
      document.getElementById("edit-end-date-error").innerText =
        "End date is required.";
      isValid = false;
    } else {
      document.getElementById("edit-end-date-error").innerText = "";
    }

    if (!eDiscount) {
      document.getElementById("edit-discount-amount-error").innerText =
        "Discount amount is required.";
      isValid = false;
    } else if (isNaN(eDiscount) || eDiscount < 50 || eDiscount > 500) {
      document.getElementById("edit-discount-amount-error").innerText =
        "Discount amount must be between 50 and 500.";
      isValid = false;
    } else {
      document.getElementById("edit-discount-amount-error").innerText = "";
    }

    if (isValid === true) {
      Swal.fire({
        title: "Are you sure you want to edit this coupon?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, edit it!",
        cancelButtonText: "No, cancel",
      }).then((result) => {
        if (result.isConfirmed) {
          $.ajax({
            url: "/admin/editCoupon",
            type: "post",
            data: { eCouponId, eCouponName, eStartDate, eEndDate, eDiscount },
          })
            .done((res) => {
              if (res) {
                closeEditModal();
                Swal.fire("Successful", `${res.message}`, "success").then(
                  () => {
                    location.reload();
                  }
                );
              }
            })
            .fail((error) => {
              console.log(error);
              Swal.fire("Failed to edit coupon");
            });
        }
      });
    }
  }

  const today = new Date().toISOString().split("T")[0];
  const startingDate = document.getElementById("startingDate");
  const expiringDate = document.getElementById("expiringDate");
  const editStartingDate = document.getElementById("edit-startingDate");
  const editExpiringDate = document.getElementById("edit-expiringDate");

  startingDate.min = today;
  expiringDate.min = today;
  editStartingDate.min = today;
  editExpiringDate.min = today;

  startingDate.addEventListener("change", function () {
    expiringDate.min = this.value;
    editExpiringDate.min = this.value;
  });

  function validateAddCouponForm() {
    let couponName = document.getElementById("coupon-name").value.trim();
    let startDate = document.getElementById("startingDate").value.trim();
    let endDate = document.getElementById("expiringDate").value.trim();
    let discountAmount = document
      .querySelector("input[name='discountAmount']")
      .value.trim();

    let isValid = true;

    if (!couponName) {
      document.getElementById("coupon-name-error").innerText =
        "Coupon name is required.";
      isValid = false;
    } else if (couponName !== couponName.toUpperCase()) {
      document.getElementById("coupon-name-error").innerText =
        "Coupon name must be in capital letters.";
      isValid = false;
    } else {
      document.getElementById("coupon-name-error").innerText = "";
    }

    if (!startDate) {
      document.getElementById("start-date-error").innerText =
        "Start date is required.";
      isValid = false;
    } else {
      document.getElementById("start-date-error").innerText = "";
    }

    if (!endDate) {
      document.getElementById("end-date-error").innerText =
        "End date is required.";
      isValid = false;
    } else {
      document.getElementById("end-date-error").innerText = "";
    }

    if (!discountAmount) {
      document.getElementById("discount-amount-error").innerText =
        "Discount amount is required.";
      isValid = false;
    } else if (
      isNaN(discountAmount) ||
      discountAmount < 50 ||
      discountAmount > 500
    ) {
      document.getElementById("discount-amount-error").innerText =
        "Discount amount must be between 50 and 500.";
      isValid = false;
    } else {
      document.getElementById("discount-amount-error").innerText = "";
    }

    return isValid;
  }

  function validateEditCouponForm() {
    let couponName = document.getElementById("edit-coupon-name").value.trim();
    let startDate = document.getElementById("edit-startingDate").value.trim();
    let endDate = document.getElementById("edit-expiringDate").value.trim();
    let discountAmount = document
      .querySelector("input[name='discountAmount']")
      .value.trim();

    let isValid = true;

    if (!couponName) {
      document.getElementById("edit-coupon-name-error").innerText =
        "Coupon name is required.";
      isValid = false;
    } else if (couponName !== couponName.toUpperCase()) {
      document.getElementById("edit-coupon-name-error").innerText =
        "Coupon name must be in capital letters.";
      isValid = false;
    } else {
      document.getElementById("edit-coupon-name-error").innerText = "";
    }

    if (!startDate) {
      document.getElementById("edit-start-date-error").innerText =
        "Start date is required.";
      isValid = false;
    } else {
      document.getElementById("edit-start-date-error").innerText = "";
    }

    if (!endDate) {
      document.getElementById("edit-end-date-error").innerText =
        "End date is required.";
      isValid = false;
    } else {
      document.getElementById("edit-end-date-error").innerText = "";
    }

    if (!discountAmount) {
      document.getElementById("edit-discount-amount-error").innerText =
        "Discount amount is required.";
      isValid = false;
    } else if (
      isNaN(discountAmount) ||
      discountAmount <= 0 ||
      discountAmount > 500
    ) {
      document.getElementById("edit-discount-amount-error").innerText =
        "Discount amount must be between 1 and 500.";
      isValid = false;
    } else {
      document.getElementById("edit-discount-amount-error").innerText = "";
    }

    return isValid;
  }
</script>
