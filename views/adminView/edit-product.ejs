<%- include("../partials/adminHeader") %>

<style>
    .error-message {
        color: red;
        margin-top: 5px;
        font-size: 14px;
        /* Adjust font size as needed */
    }
</style>

<section class="content-main">
    <div class="row">
        <div class="col-9">
            <div class="content-header">
                <h2 class="content-title">Edit Product</h2>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="post" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data" onsubmit="return validateAndSubmit()">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" name="productName" value="<%= product.productName %>" class="form-control border" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Full description</label>
                            <textarea name="description" class="form-control border" rows="4"><%= product.productDescription %></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular price</label>
                                    <input placeholder="$" name="regularPrice" type="number" value="<%= product.regularPrice %>" class="form-control border">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale price</label>
                                    <input name="salePrice" type="number" value="<%= product.salePrice %>" class="form-control border">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Small</label>
                                    <input placeholder="" name="small_quantity" value="<%= product.productSizes[0].quantity %>" type="number" class="form-control border">
                                    <div id="small-quantity-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Medium</label>
                                    <input placeholder="" name="medium_quantity" value="<%= product.productSizes[1].quantity %>" type="number" class="form-control border">
                                    <div id="medium-quantity-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Large</label>
                                    <input placeholder="" name="large_quantity" value="<%= product.productSizes[2].quantity %>" type="number" class="form-control border">
                                    <div id="large-quantity-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-select border" style="width: 150px;" name="category">
                                            <% for (let i=0; i < cat.length; i++) { %>
                                                <option value="<%= cat[i]._id %>" <% if (product.category && product.category._id.toString()===cat[i]._id.toString()) { %> selected<% } %>>
                                                    <%= cat[i].name %>
                                                </option>
                                            <% } %>
                                        </select>
                                    </div>
                                </div> <!-- row.// -->
                            </div>
                        </div> <!-- card end// -->

                        <div class="card mb-2">
                            <div class="card-header">
                                <h4>Choose images</h4>
                            </div>
                            <div id="addedImagesContainer" class="col-md-6">
                                <% for (let i=0; i < product.productImage.length; i++) { %>
                                    <div class="col-md-12 mb-4">
                                        <div class="row">
                                            <div class="col-12">
                                                <img class="rounded" style="width: 50px; height: 60px;" src="/uploads/product-images/<%= product.productImage[i] %>" alt="image" data-filename="<%= product.productImage[i] %>">
                                                <span class="delete-icon" onclick="deleteImage('<%= product._id %>', '<%= product.productImage[i] %>')">X</span>
                                            </div>
                                        </div>
                                    </div>
                                <% } %>
                            </div>
                            <div class="card-body">
                                <div class="input-upload">
                                    <img src="assets/imgs/theme/upload.svg" alt="">
                                    <input class="form-control border" name="images" id="imageInput" type="file" multiple>
                                    <div id="image-error" class="error-message"></div>
                                </div>
                            </div>
                        </div> <!-- card end// -->

                        <div>
                            <button class="btn btn-md rounded font-sm hover-up" id="updatebtn" type="submit">Update</button>
                        </div>
                    </form>
                </div>
            </div> <!-- card end// -->
        </div>
    </div>
    </div>
</section>

<style>
    .thumbnails-container {
        display: flex;
        overflow-x: auto;
    }

    .thumbnail {
        margin-right: 10px;
    }
</style>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    // Array to store selected images
    const selectedImages = [];

    // Function to handle file input change
    document.getElementById("imageInput").addEventListener("change", handleFileSelect);

    function handleFileSelect(event) {
        const newFiles = Array.from(event.target.files);
        const validNewFiles = newFiles.filter(isValidImage);
        const uniqueNewFiles = validNewFiles.filter(file => !selectedImages.includes(file));
        uniqueNewFiles.forEach(file => {
            selectedImages.push(file);
            const thumbnail = createThumbnail(file);
            document.getElementById("addedImagesContainer").appendChild(thumbnail);
        });
    }

    // Function to validate image files
    function isValidImage(file) {
        const allowedTypes = ["image/jpeg", "image/png", "image/jpg"];
        if (!allowedTypes.includes(file.type)) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid file type',
                text: 'Please upload images of type JPEG, PNG, or JPG.',
            });
            return false;
        }
        return true;
    }

    // Function to create a thumbnail element for a file
    function createThumbnail(file) {
        const thumbnail = document.createElement("div");
        thumbnail.classList.add("thumbnail");

        const img = document.createElement("img");
        img.src = URL.createObjectURL(file);
        img.alt = "thumbnail";
        img.style.width = "50px"; 
        img.style.height = "auto";

        const removeIcon = document.createElement("span");
        removeIcon.classList.add("remove-icon");
        removeIcon.innerHTML = "&times;";

        removeIcon.addEventListener("click", function () {
            const index = selectedImages.indexOf(file);
            if (index !== -1) {
                selectedImages.splice(index, 1);
            }
            thumbnail.remove();
        });

        thumbnail.appendChild(img);
        thumbnail.appendChild(removeIcon);

        return thumbnail;
    }

    function deleteImage(productId, filename) {
        Swal.fire({
            title: "Are you sure?",
            text: "Once deleted, you will not be able to recover this image!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel!",
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
        }).then((result) => {
            if (result.isConfirmed) {
                deleteSingleImage(productId, filename);
            } else if (result.dismiss === Swal.DismissReason.cancel) {
                Swal.fire("Cancelled", "Your image is safe!", "info");
            }
        });
    }

    function deleteSingleImage(productId, filename) {
        fetch("/admin/deleteImage", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ productId, filename }),
        })
        .then((response) => location.reload())
        .then((data) => {
            if (data.success) {
                removeImage(filename);
            } else {
                console.error("Error deleting image:", data.error);
            }
        })
        .catch((error) => {
            console.error("Error deleting image:", error);
        });
    }

    function validateAndSubmit() {
        let isValid = true;

        // Reset previous error messages
        const errorElements = document.querySelectorAll(".error-message");
        errorElements.forEach(el => el.textContent = "");

        // Product Name validation
        const productName = document.getElementById("product_name").value.trim();
        if (productName === "" || productName.length > 100) {
            document.getElementById("productName-error").textContent = "Product name is required and should not exceed 100 characters.";
            isValid = false;
        }

        // Description validation
        const description = document.querySelector("textarea[name='description']").value.trim();
        if (description === "" || description.length > 1000) {
            document.getElementById("description-error").textContent = "Description is required and should not exceed 1000 characters.";
            isValid = false;
        }

        // Regular Price validation
        const regularPrice = document.querySelector("input[name='regularPrice']").value.trim();
        if (regularPrice === "" || regularPrice < 0) {
            document.getElementById("regularPrice-error").textContent = "Regular price is required and should not be negative.";
            isValid = false;
        }

        // Sale Price validation
        const salePrice = document.querySelector("input[name='salePrice']").value.trim();
        if (salePrice === "" || salePrice < 0) {
            document.getElementById("salePrice-error").textContent = "Sale price is required and should not be negative.";
            isValid = false;
        }

        // Quantity validations
        const sizes = ["small", "medium", "large"];
        sizes.forEach(size => {
            const quantity = document.querySelector(`input[name='${size}_quantity']`).value.trim();
            if (quantity === "" || quantity < 0) {
                document.getElementById(`${size}-quantity-error`).textContent = `${size.charAt(0).toUpperCase() + size.slice(1)} quantity is required and should not be negative.`;
                isValid = false;
            }
        });

        // Image validation
        const imageInput = document.getElementById("imageInput");
        const allowedTypes = ["image/jpeg", "image/png", "image/jpg"];
        for (let i = 0; i < imageInput.files.length; i++) {
            if (!allowedTypes.includes(imageInput.files[i].type)) {
                document.getElementById("image-error").textContent = "Only images of type JPEG, PNG, or JPG are allowed.";
                isValid = false;
                break;
            }
        }

        return isValid;
    }

        $(document).ready(function () {
        $('#updatebtn').click(function (e) {
            e.preventDefault();

            if (validateAndSubmit()) {
                var formData = new FormData($('form')[0]);

                $.ajax({
                    url: '/admin/editProduct/<%=product._id%>',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        if (data.success) {
                            Toastify({
                                text: data.message,
                                duration: 3000,
                                gravity: "top",
                                position: "center",
                                style: { background: "green", color: "white" }
                            }).showToast();

                            setTimeout(function () {
                                window.location.href = '/admin/productPage';
                            }, 2000);
                        } else if (data.error) {
                            Toastify({
                                text: data.error,
                                duration: 3000,
                                gravity: "top",
                                position: "center",
                                style: { background: "red", color: "white" }
                            }).showToast();
                        }
                    },
                    error: function (xhr, status, error) {
                        Toastify({
                            text: "Error: " + error,
                            duration: 3000,
                            gravity: "top",
                            position: "center",
                            style: { background: "red", color: "white" }
                        }).showToast();
                    }
                });
            }
        });
    });
</script>
<%- include("../partials/adminFooter") %>
