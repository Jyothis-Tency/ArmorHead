<%- include("../partials/adminHeader") %>

<style>
    .error-message {
        color: red;
        margin-top: 5px;
        font-size: 14px;
    }

    .thumbnail {
        position: relative;
        display: inline-block;
        margin-right: 10px;
    }

    .thumbnail img {
        width: 50px;
        height: auto;
        border-radius: 5px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .thumbnail .remove-icon {
        position: absolute;
        top: -5px;
        right: -5px;
        background-color: #ff0000;
        color: #fff;
        border-radius: 50%;
        cursor: pointer;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 12px;
    }

    .input-upload {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
        border: 2px dashed #ddd;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .input-upload:hover {
        background-color: #f7f7f7;
    }

    .input-upload img {
        margin-right: 10px;
    }

    #addedImagesContainer {
        display: flex;
        flex-wrap: wrap;
    }
</style>

<section class="content-main">
    <div class="row">
        <div class="col-9">
            <div class="content-header">
                <h2 class="content-title">Edit Product</h2>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    <form id="editProductForm" method="post" enctype="multipart/form-data" onsubmit="return validateAndSubmit()">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" name="productName" value="<%= product.productName %>" class="form-control border" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Full description</label>
                            <textarea name="productDescription" class="form-control border" rows="4"><%= product.productDescription %></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular price</label>
                                    <input placeholder="$" name="regularPrice" type="text" value="<%= product.regularPrice %>" class="form-control border">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale price</label>
                                    <input name="salePrice" type="text" value="<%= product.salePrice %>" class="form-control border">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Small (S)</label>
                                    <input name="small_quantity" type="text" value="<%= product.productSizes[0].quantity %>" class="form-control border">
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Medium (M)</label>
                                    <input name="medium_quantity" type="text" value="<%= product.productSizes[1].quantity %>" class="form-control border">
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    <label class="form-label">Large (L)</label>
                                    <input name="large_quantity" type="text" value="<%= product.productSizes[2].quantity %>" class="form-control border">
                                </div>
                            </div>
                        </div>
                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-select border" style="width: 150px;" name="category">
                                            <% for (let i = 0; i < cat.length; i++) { %>
                                                <option value="<%= cat[i]._id %>" <%= cat[i]._id === product.category ? 'selected' : '' %>>
                                                    <%= cat[i].name %>
                                                </option>
                                            <% } %>
                                        </select>
                                    </div>
                                </div> <!-- row.// -->
                            </div>
                        </div> <!-- card end// -->
                        <div class="card mb-2">
                            <div class="card-header">
                                <h4>Choose images</h4>
                            </div>
                            <div id="addedImagesContainer" class="col-md-12">
                                <% for (let i = 0; i < product.productImage.length; i++) { %>
                                    <div class="thumbnail">
                                        <img src="/uploads/product-images/<%= product.productImage[i] %>" alt="image" data-filename="<%= product.productImage[i] %>">
                                        <span class="remove-icon" onclick="deleteImage('<%= product._id %>', '<%= product.productImage[i] %>')">‚ùå</span>
                                    </div>
                                <% } %>
                            </div>
                            <div class="card-body">
                                <div class="input-upload">
                                    <img src="assets/imgs/theme/upload.svg" alt="">
                                    <span>Upload Images</span>
                                    <input class="form-control border" name="images" id="imageInput" type="file" multiple style="display: none;">
                                </div>
                            </div>
                        </div>
                        <div>
                            <button class="btn btn-md rounded font-sm hover-up" id="updatebtn" type="submit">Update</button>
                        </div>
                    </form>
                </div>
            </div> <!-- card end// -->
        </div>
    </div>
</section>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    const selectedImages = [];
    const addedImagesContainer = $("#addedImagesContainer");
    const imageInput = $("#imageInput");
    const inputUpload = $(".input-upload");

    inputUpload.on("click", function() {
        imageInput.click();
    });

    imageInput.on("change", handleFileSelect);

    function handleFileSelect(event) {
        const files = event.target.files;

        for (let i = 0; i < files.length; i++) {
            const file = files[i];

            selectedImages.push(file);

            const thumbnail = $("<div>").addClass("thumbnail");
            const img = $("<img>").attr("src", URL.createObjectURL(file)).attr("alt", "thumbnail");
            const removeIcon = $("<span>").addClass("remove-icon").html("&times;");

            removeIcon.on("click", function () {
                const index = selectedImages.indexOf(file);
                if (index !== -1) {
                    selectedImages.splice(index, 1);
                }
                thumbnail.remove();
            });

            thumbnail.append(img).append(removeIcon);
            addedImagesContainer.append(thumbnail);
        }
    }

    function deleteImage(productId, filename) {
        deleteSingleImage(productId, filename);
    }

    function deleteSingleImage(productId, filename) {
        $.ajax({
            url: "/admin/deleteImage",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({ productId, filename }),
            success: function(data) {
                if (data.success) {
                    removeImage(filename);
                } else {
                    console.error("Error deleting image:", data.error);
                }
            },
            error: function(error) {
                console.error("Error:", error);
            }
        });
    }

    function removeImage(filename) {
        const imageElement = $(`[data-filename="${filename}"]`);
        if (imageElement.length) {
            imageElement.closest('.thumbnail').remove();
        }
    }

    function validateAndSubmit() {
        if (validateForm()) {
            const formData = new FormData(document.getElementById("editProductForm"));
            for (let i = 0; i < selectedImages.length; i++) {
                formData.append("images", selectedImages[i]);
            }

            $.ajax({
                url: "/admin/editProduct/<%= product._id %>",
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    // Handle success (e.g., show a message or redirect)
                    console.log("Product updated successfully:", response);
                    Toastify({
            text: response.message,
            duration: 2000,
            gravity: "top",
            position: "center",
            style: {
              background: "green",
              color: "white",
            },
          }).showToast();
          setTimeout(() => {
    window.location.href= "/admin/productPage"
}, 2000);

                },
                error: function(error) {
                    // Handle error (e.g., show an error message)
                    console.error("Error updating product:", error);
                    Toastify({
            text: error.message,
            duration: 2000,
            gravity: "top",
            position: "center",
            style: {
              background: "green",
              color: "white",
            },
          }).showToast();
                }
            });
        }
        return false;
    }

    function validateForm() {
        resetErrorMessages();
        let isValid = true;

        const productName = $("input[name='productName']").val();
        const regularPrice = $("input[name='regularPrice']").val();
        const salePrice = $("input[name='salePrice']").val();

        if (!productName) {
            displayErrorMessage("productName-error", "Product Name is required");
            isValid = false;
        }

        if (isNaN(regularPrice) || regularPrice <= 0) {
            displayErrorMessage("regularPrice-error", "Regular price must be a positive number");
            isValid = false;
        }

        if (isNaN(salePrice) || salePrice <= 0) {
            displayErrorMessage("salePrice-error", "Sale price must be a positive number");
            isValid = false;
        }

        if (parseFloat(salePrice) >= parseFloat(regularPrice)) {
            displayErrorMessage("salePrice-error", "Sale price must be less than Regular price");
            isValid = false;
        }

        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        $("#" + elementId).text(message).show();
    }

    function resetErrorMessages() {
        $(".error-message").text("").hide();
    }
</script>

<%- include("../partials/adminFooter") %>
