<%- include("../partials/adminHeader") %>
<style>
  .error-message {
    color: red;
    margin-top: 5px;
    font-size: 14px;
  }

  .thumbnails-container {
    display: flex;
    overflow-x: auto;
  }

  .thumbnail {
    margin-right: 10px;
  }
</style>
<section class="content-main">
  <div class="row">
    <div class="col-9">
      <div class="content-header">
        <h2 class="content-title">Add New Product</h2>
      </div>
    </div>
    <div class="col-lg-6">
      <div class="card mb-4">
        <div class="card-body">
          <form
            method="post"
            action="/admin/addProducts"
            enctype="multipart/form-data"
            onsubmit="return validateForm()"
          >
            <!-- Product Name -->
            <div class="mb-4">
              <label for="product_name" class="form-label">Product Name</label>
              <input
                type="text"
                placeholder="Type here"
                name="productName"
                class="form-control border"
                id="product_name"
              />
              <div id="productName-error" class="error-message"></div>
            </div>
            <!-- Description -->
            <div class="mb-4">
              <label class="form-label">Full description</label>
              <textarea
                placeholder="Type here"
                name="productDescription"
                class="form-control border"
                rows="4"
              ></textarea>
              <div id="description" class="error-message"></div>
            </div>
            <!-- Prices -->
            <div class="row">
              <div class="col-lg-4">
                <div class="mb-4">
                  <label class="form-label">Regular price</label>
                  <input
                    placeholder="₹"
                    name="regularPrice"
                    type="text"
                    class="form-control border"
                  />
                  <div id="regularPrice-error" class="error-message"></div>
                </div>
              </div>
              <div class="col-lg-4">
                <div class="mb-4">
                  <label class="form-label">Sale price</label>
                  <input
                    placeholder="₹"
                    name="salePrice"
                    type="text"
                    class="form-control border"
                  />
                  <div id="salePrice-error" class="error-message"></div>
                </div>
              </div>
            </div>
            <!-- Quantities -->
            <div class="row">
              <div class="col-lg-4">
                <div class="mb-4">
                  <label class="form-label">Small</label>
                  <input
                    placeholder=""
                    name="small_quantity"
                    type="text"
                    class="form-control border"
                  />
                  <div id="small-quantity-error" class="error-message"></div>
                </div>
              </div>
              <div class="col-lg-4">
                <div class="mb-4">
                  <label class="form-label">Medium</label>
                  <input
                    placeholder=""
                    name="medium_quantity"
                    type="text"
                    class="form-control border"
                  />
                  <div id="medium-quantity-error" class="error-message"></div>
                </div>
              </div>
              <div class="col-lg-4">
                <div class="mb-4">
                  <label class="form-label">Large</label>
                  <input
                    placeholder=""
                    name="large_quantity"
                    type="text"
                    class="form-control border"
                  />
                  <div id="large-quantity-error" class="error-message"></div>
                </div>
              </div>
            </div>
            <!-- Category -->
            <div class="card mb-4">
              <div class="card-body">
                <div class="row gx-2">
                  <div class="col-sm-6 mb-3">
                    <label class="form-label">Category</label>
                    <select
                      class="form-select border"
                      style="width: 150px"
                      name="category"
                    >
                      <% for (let i = 0; i < cat.length; i++) { %>
                      <option value="<%= cat[i]._id %>">
                        <%= cat[i].name %>
                      </option>
                      <% } %>
                    </select>
                  </div>
                </div>
              </div>
            </div>
            <!-- Images -->
            <div class="card mb-2">
              <div class="card-header">
                <h4>Choose images</h4>
              </div>
              <div class="border row">
                <div
                  id="addedImagesContainer"
                  class="thumbnails-container"
                ></div>
              </div>
              <div class="card-body">
                <div class="input-upload">
                  <img src="admin-assets/imgs/theme/upload.svg" alt="" />
                  <input
                    class="form-control border"
                    name="images"
                    id="imageInput"
                    type="file"
                    multiple
                  />
                </div>
              </div>
            </div>
            <!-- Submit Button -->
            <div>
              <button
                class="btn btn-md rounded font-sm hover-up"
                type="button"
                onclick="validateAndSubmit()"
              >
                Publish
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>
<script>
  const maxFileSize = 2 * 1024 * 1024; // 2 MB
  const maxTotalFileSize = 10 * 1024 * 1024; // 10 MB total for all files
  const maxFileCount = 5;
  const selectedImages = [];

  document
    .getElementById("imageInput")
    .addEventListener("change", handleFileSelect);

  function handleFileSelect(event) {
    const newFiles = Array.from(event.target.files);
    const addedImagesContainer = document.getElementById(
      "addedImagesContainer"
    );

    let totalSize =
      selectedImages.reduce((acc, file) => acc + file.size, 0) +
      newFiles.reduce((acc, file) => acc + file.size, 0);

    if (selectedImages.length + newFiles.length > maxFileCount) {
      Swal.fire({
        icon: "error",
        title: "Too many files",
        text: `You can upload a maximum of ${maxFileCount} images.`,
      });
      return;
    }

    if (totalSize > maxTotalFileSize) {
      Swal.fire({
        icon: "error",
        title: "Total file size exceeds limit",
        text: `Total upload size must be less than ${
          maxTotalFileSize / (1024 * 1024)
        } MB.`,
      });
      return;
    }

    newFiles.forEach((file) => {
      if (isValidImage(file) && selectedImages.length < maxFileCount) {
        selectedImages.push(file);
        const thumbnail = createThumbnail(file);
        addedImagesContainer.appendChild(thumbnail);
      }
    });
  }

  function isValidImage(file) {
    const allowedTypes = ["image/jpeg", "image/png", "image/gif"];

    if (!allowedTypes.includes(file.type)) {
      Swal.fire({
        icon: "error",
        title: "Invalid file type",
        text: "Please upload images of type JPEG, PNG, or GIF.",
      });
      return false;
    }

    if (file.size > maxFileSize) {
      Swal.fire({
        icon: "error",
        title: "File size exceeds limit",
        text: `Please upload images smaller than ${
          maxFileSize / (1024 * 1024)
        } MB.`,
      });
      return false;
    }

    return true;
  }

  function createThumbnail(file) {
    const thumbnail = document.createElement("div");
    thumbnail.classList.add("thumbnail");

    const img = document.createElement("img");
    img.src = URL.createObjectURL(file);
    img.alt = "thumbnail";
    img.style.width = "50px";
    img.style.height = "auto";

    const removeIcon = document.createElement("span");
    removeIcon.classList.add("remove-icon");
    removeIcon.innerHTML = "&times;"; // Multiplication symbol as a cross

    removeIcon.addEventListener("click", function () {
      const index = selectedImages.indexOf(file);
      if (index !== -1) {
        selectedImages.splice(index, 1);
      }
      thumbnail.remove();
    });

    thumbnail.appendChild(img);
    thumbnail.appendChild(removeIcon);

    return thumbnail;
  }

  function validateAndSubmit() {
    if (validateForm()) {
      sendProductData();
    }
  }

  function validateForm() {
    resetErrorMessages();
    let isValid = true;

    const productName = document.getElementById("product_name").value;
    const regularPrice = document.getElementsByName("regularPrice")[0].value;
    const salePrice = document.getElementsByName("salePrice")[0].value;
    const smallQuantity = document.getElementsByName("small_quantity")[0].value;
    const mediumQuantity =
      document.getElementsByName("medium_quantity")[0].value;
    const largeQuantity = document.getElementsByName("large_quantity")[0].value;
    const specialCharsRegex = /[!@#$%^&*(),.?":{}|<>]/;

    if (productName === "") {
      displayErrorMessage("productName-error", "Product Name is required");
      isValid = false;
    } else if (specialCharsRegex.test(productName)) {
      displayErrorMessage(
        "productName-error",
        "Product Name should not contain special characters"
      );
      isValid = false;
    }

    if (isNaN(regularPrice) || regularPrice <= 0) {
      displayErrorMessage(
        "regularPrice-error",
        "Regular price must be a positive number"
      );
      isValid = false;
    }

    if (isNaN(salePrice) || salePrice <= 0) {
      displayErrorMessage(
        "salePrice-error",
        "Sale price must be a positive number"
      );
      isValid = false;
    }

    if (parseFloat(salePrice) >= parseFloat(regularPrice)) {
      displayErrorMessage(
        "salePrice-error",
        "Sale price must be less than Regular price"
      );
      isValid = false;
    }

    if (!/^[1-9]\d*$/.test(smallQuantity)) {
      displayErrorMessage(
        "small-quantity-error",
        "Small quantity must be a positive integer"
      );
      isValid = false;
    }

    if (!/^[1-9]\d*$/.test(mediumQuantity)) {
      displayErrorMessage(
        "medium-quantity-error",
        "Medium quantity must be a positive integer"
      );
      isValid = false;
    }

    if (!/^[1-9]\d*$/.test(largeQuantity)) {
      displayErrorMessage(
        "large-quantity-error",
        "Large quantity must be a positive integer"
      );
      isValid = false;
    }

    return isValid;
  }

  function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
  }

  function resetErrorMessages() {
    const errorElements = document.querySelectorAll(".error-message");
    errorElements.forEach((element) => {
      element.innerText = "";
      element.style.display = "none";
    });
  }

  function sendProductData() {
    const formData = new FormData();
    formData.append(
      "productName",
      document.getElementById("product_name").value
    );
    formData.append(
      "productDescription",
      document.querySelector('textarea[name="productDescription"]').value
    );
    formData.append(
      "category",
      document.querySelector('select[name="category"]').value
    );
    formData.append(
      "regularPrice",
      document.querySelector('input[name="regularPrice"]').value
    );
    formData.append(
      "salePrice",
      document.querySelector('input[name="salePrice"]').value
    );
    formData.append(
      "small_quantity",
      document.querySelector('input[name="small_quantity"]').value
    );
    formData.append(
      "medium_quantity",
      document.querySelector('input[name="medium_quantity"]').value
    );
    formData.append(
      "large_quantity",
      document.querySelector('input[name="large_quantity"]').value
    );

    selectedImages.forEach((file, index) => {
      formData.append(
        "images",
        file,
        `image-${index}.${file.name.split(".").pop()}`
      );
    });

    fetch("/admin/addProduct", {
      method: "POST",
      body: formData,
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.success) {
          Toastify({
            text: data.success,
            duration: 3000,
            gravity: "top",
            position: "center",
            style: {
              background: "green",
              color: "white",
            },
          }).showToast();
          setTimeout(() => {
            window.location.href = "/admin/productPage";
          }, 2000);
        } else if (data.error) {
          Toastify({
            text: data.error,
            duration: 3000,
            gravity: "top",
            position: "center",
            style: {
              background: "red",
              color: "white",
            },
          }).showToast();
        }
      })
      .catch((error) => {
        Toastify({
          text: "Error: " + error.message,
          duration: 3000,
          gravity: "top",
          position: "center",
          style: {
            background: "red",
            color: "white",
          },
        }).showToast();
      });
  }
</script>
<%- include("../partials/adminFooter") %>
